[{"/home/guillaume/Projects/test/jdrp/static/src/index.js":"1","/home/guillaume/Projects/test/jdrp/static/src/App.js":"2","/home/guillaume/Projects/test/jdrp/static/src/component/nav.jsx":"3","/home/guillaume/Projects/test/jdrp/static/src/pages/home.jsx":"4","/home/guillaume/Projects/test/jdrp/static/src/pages/about.jsx":"5","/home/guillaume/Projects/test/jdrp/static/src/component/item.jsx":"6","/home/guillaume/Projects/test/jdrp/static/src/component/items/armor.jsx":"7","/home/guillaume/Projects/test/jdrp/static/src/component/items/weapon.jsx":"8","/home/guillaume/Projects/test/jdrp/static/src/component/items/jewel.jsx":"9","/home/guillaume/Projects/test/jdrp/static/src/component/items/consumable.jsx":"10","/home/guillaume/Projects/test/jdrp/static/src/pages/private/appjdrp.jsx":"11","/home/guillaume/Projects/test/jdrp/static/src/utilities/privatesRoutes.jsx":"12","/home/guillaume/Projects/test/jdrp/static/src/keycloak.js":"13"},{"size":533,"mtime":1608115435000,"results":"14","hashOfConfig":"15"},{"size":881,"mtime":1608126134000,"results":"16","hashOfConfig":"15"},{"size":1675,"mtime":1608132886000,"results":"17","hashOfConfig":"15"},{"size":2050,"mtime":1608133822000,"results":"18","hashOfConfig":"15"},{"size":160,"mtime":1608038212000,"results":"19","hashOfConfig":"15"},{"size":1471,"mtime":1608039620000,"results":"20","hashOfConfig":"15"},{"size":2508,"mtime":1608038887000,"results":"21","hashOfConfig":"15"},{"size":2565,"mtime":1608038942000,"results":"22","hashOfConfig":"15"},{"size":2942,"mtime":1608038944000,"results":"23","hashOfConfig":"15"},{"size":1478,"mtime":1608038946000,"results":"24","hashOfConfig":"15"},{"size":282,"mtime":1608131380000,"results":"25","hashOfConfig":"15"},{"size":597,"mtime":1608130571000,"results":"26","hashOfConfig":"15"},{"size":449,"mtime":1608217341439,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"lf34g",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/guillaume/Projects/test/jdrp/static/src/index.js",[],["62","63"],"/home/guillaume/Projects/test/jdrp/static/src/App.js",[],"/home/guillaume/Projects/test/jdrp/static/src/component/nav.jsx",[],"/home/guillaume/Projects/test/jdrp/static/src/pages/home.jsx",["64"],"import React from 'react';\nimport { Jumbotron, Container, Carousel } from 'react-bootstrap';\nimport { holder } from 'holderjs'\n\nconst HomePage = () => {\n    return (\n        <>\n            <Carousel>\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src=\"holder.js/800x400?text=First slide&bg=373940\"\n                        alt=\"First slide\"\n                    />\n                    <Carousel.Caption>\n                        <h3>First slide label</h3>\n                        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src=\"holder.js/800x400?text=Second slide&bg=282c34\"\n                        alt=\"Third slide\"\n                    />\n\n                    <Carousel.Caption>\n                        <h3>Second slide label</h3>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src=\"holder.js/800x400?text=Third slide&bg=20232a\"\n                        alt=\"Third slide\"\n                    />\n\n                    <Carousel.Caption>\n                        <h3>Third slide label</h3>\n                        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n            </Carousel>\n\n            <Jumbotron fluid className='textblack'>\n                <Container>\n                    <h1>JDRP</h1>\n                    <p>\n                        Some text about how awsome is my app\n                </p>\n                </Container>\n            </Jumbotron>\n        </>\n    )\n}\nexport default HomePage","/home/guillaume/Projects/test/jdrp/static/src/pages/about.jsx",[],"/home/guillaume/Projects/test/jdrp/static/src/component/item.jsx",[],"/home/guillaume/Projects/test/jdrp/static/src/component/items/armor.jsx",["65","66","67","68","69"],"import React from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Card from 'react-bootstrap/Card';\n\nclass Armor extends React.Component {\n    render() {\n        let itemspec;\n        let border;\n\n        if (this.props.item.object.equipement.armor.ailment !== 'None') {\n            itemspec = <Card.Subtitle className=\"mb-2 text-muted\"><b>Resistance:</b> {this.props.item.object.equipement.armor.ailment}: {this.props.item.object.equipement.armor.resistances}%</Card.Subtitle>\n        } else {\n            itemspec = ''\n        }\n\n        if (this.props.item.object.rarity == \"common\") {\n            border = \"item_render_div_common\"\n        } else if (this.props.item.object.rarity == \"magic\") {\n            border = \"item_render_div_magic\"\n        } else if (this.props.item.object.rarity == \"rare\") {\n            border = \"item_render_div_rare\"\n        } else if (this.props.item.object.rarity == \"epic\") {\n            border = \"item_render_div_epic\"\n        } else {\n            border = \"item_render_div_legendary\"\n        }\n\n        const popover = (\n            <Popover id=\"popover-basic\">\n                <Card style={{ width: '18rem', color:\"black\"}}>\n                    <Card.Body>\n                        <Card.Title>{this.props.item.object.name}</Card.Title>\n                        <hr/>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Type:</b> {this.props.item.object.item_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Rarity:</b> {this.props.item.object.rarity}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Emplacement:</b> {this.props.item.object.equipement.armor.armor_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Armure:</b> {this.props.item.object.equipement.armor.armor}</Card.Subtitle>\n                        {itemspec}\n                    </Card.Body>\n                </Card>\n            </Popover>\n        );\n\n        const asset = 'http://localhost:8000/' + this.props.item.object.asset;\n        return (\n            <div class={border}>\n                <div class=\"item_render_div\">\n                    <OverlayTrigger trigger=\"hover\" placement=\"auto\" overlay={popover}>\n                        <img width=\"50\" src={asset} />\n                    </OverlayTrigger>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Armor",["70","71"],"/home/guillaume/Projects/test/jdrp/static/src/component/items/weapon.jsx",["72","73","74","75","76"],"import React from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Card from 'react-bootstrap/Card';\n\nclass Weapon extends React.Component {\n    render() {\n        let itemspec;\n        let border;\n\n        if (this.props.item.object.equipement.weapon.ailment[0] !== 'None') {\n            itemspec = <Card.Subtitle className=\"mb-2 text-muted\"><b>Effets:</b> {this.props.item.object.equipement.weapon.ailment[0]}: {this.props.item.object.equipement.weapon.ailment[1]}%</Card.Subtitle>\n        } else {\n            itemspec = ''\n        }\n\n        if (this.props.item.object.rarity == \"common\") {\n            border = \"item_render_div_common\"\n        } else if (this.props.item.object.rarity == \"magic\") {\n            border = \"item_render_div_magic\"\n        } else if (this.props.item.object.rarity == \"rare\") {\n            border = \"item_render_div_rare\"\n        } else if (this.props.item.object.rarity == \"epic\") {\n            border = \"item_render_div_epic\"\n        } else {\n            border = \"item_render_div_legendary\"\n        }\n\n        const popover = (\n            <Popover id=\"popover-basic\">\n                <Card style={{ width: '18rem', color:\"black\"}}>\n                    <Card.Body>\n                        <Card.Title>{this.props.item.object.name}</Card.Title>\n                        <hr/>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Type:</b> {this.props.item.object.item_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Rarity:</b> {this.props.item.object.rarity}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Emplacement:</b> {this.props.item.object.equipement.slot}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Damages:</b> {this.props.item.object.equipement.weapon.min_damage} - {this.props.item.object.equipement.weapon.max_damage}</Card.Subtitle>\n                        {itemspec}\n                    </Card.Body>\n                </Card>\n            </Popover>\n        );\n\n        const asset = 'http://localhost:8000/' + this.props.item.object.asset;\n        return (\n            <div class={border}>\n                <div class=\"item_render_div\">\n                    <OverlayTrigger trigger=\"hover\" placement=\"auto\" overlay={popover}>\n                        <img width=\"50\" src={asset} />\n                    </OverlayTrigger>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Weapon","/home/guillaume/Projects/test/jdrp/static/src/component/items/jewel.jsx",["77","78","79","80","81"],"import React from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Card from 'react-bootstrap/Card';\n\nclass Jewel extends React.Component {\n    render() {\n        let itemspec;\n        let border;\n\n        if (this.props.item.object.equipement.jewel.spell.incante !== \"\") {\n            itemspec = <Card.Subtitle className=\"mb-2 text-muted\"><b>Spell damage:</b> {this.props.item.object.equipement.jewel.spell.incante}</Card.Subtitle>\n        } else {\n            itemspec = ''\n        }\n\n        if (this.props.item.object.rarity == \"common\") {\n            border = \"item_render_div_common\"\n        } else if (this.props.item.object.rarity == \"magic\") {\n            border = \"item_render_div_magic\"\n        } else if (this.props.item.object.rarity == \"rare\") {\n            border = \"item_render_div_rare\"\n        } else if (this.props.item.object.rarity == \"epic\") {\n            border = \"item_render_div_epic\"\n        } else {\n            border = \"item_render_div_legendary\"\n        }\n\n        const popover = (\n            <Popover id=\"popover-basic\">\n                <Card style={{ width: '18rem', color:\"black\"}}>\n                    <Card.Body>\n                        <Card.Title>{this.props.item.object.name}</Card.Title>\n                        <hr></hr>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Type:</b> {this.props.item.object.equipement.jewel.jewel_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Rarity:</b> {this.props.item.object.rarity}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Emplacement:</b> {this.props.item.object.equipement.slot}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Spell name:</b> {this.props.item.object.equipement.jewel.spell.name}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Incante:</b> {this.props.item.object.equipement.jewel.spell.incante}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Usage:</b> {this.props.item.object.equipement.jewel.usage}</Card.Subtitle>\n                        {itemspec}\n                        <Card.Text>\n                            {this.props.item.object.equipement.jewel.spell.description}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Popover>\n        );\n\n        const asset = 'http://localhost:8000/' + this.props.item.object.asset;\n        return (\n            <div class={border}>\n                <div class=\"item_render_div\">\n                    <OverlayTrigger trigger=\"hover\" placement=\"auto\" overlay={popover}>\n                        <img width=\"50\" src={asset} />\n                    </OverlayTrigger>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Jewel","/home/guillaume/Projects/test/jdrp/static/src/component/items/consumable.jsx",["82"],"import React from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Card from 'react-bootstrap/Card';\n\nclass Consumable extends React.Component {\n    render() {\n\n        const popover = (\n            <Popover id=\"popover-basic\">\n                <Card style={{ width: '18rem', color:\"black\"}}>\n                    <Card.Body>\n                        <Card.Title>{this.props.item.consumable.name}</Card.Title>\n                        <hr/>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Type:</b> {this.props.item.consumable.item_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Rarity:</b> {this.props.item.consumable.rarity}</Card.Subtitle>\n                        <Card.Text>\n                            {this.props.item.consumable.description}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Popover>\n        );\n\n        const asset = 'http://localhost:8000/' + this.props.item.consumable.asset;\n        return (\n            <div class=\"item_render_div_common\">\n                <div class=\"item_render_div\">\n                    <OverlayTrigger trigger=\"hover\" placement=\"auto\" overlay={popover}>\n                        <img width=\"50\" src={asset} />\n                    </OverlayTrigger>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Consumable","/home/guillaume/Projects/test/jdrp/static/src/pages/private/appjdrp.jsx",["83"],"import { useKeycloak } from '@react-keycloak/web';\n\nconst AppJdrp = () => {\n    const keycloak = useKeycloak();\n    \n    return <span>Oui</span>;\n\n    <div>{`User is ${\n        !keycloak.keycloak.authenticated ? 'NOT ' : ''\n      }authenticated`}</div>\n\n\n};\n\nexport default AppJdrp;","/home/guillaume/Projects/test/jdrp/static/src/utilities/privatesRoutes.jsx",[],"/home/guillaume/Projects/test/jdrp/static/src/keycloak.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":17,"column":43,"nodeType":"94","messageId":"95","endLine":17,"endColumn":45},{"ruleId":"92","severity":1,"message":"93","line":19,"column":50,"nodeType":"94","messageId":"95","endLine":19,"endColumn":52},{"ruleId":"92","severity":1,"message":"93","line":21,"column":50,"nodeType":"94","messageId":"95","endLine":21,"endColumn":52},{"ruleId":"92","severity":1,"message":"93","line":23,"column":50,"nodeType":"94","messageId":"95","endLine":23,"endColumn":52},{"ruleId":"96","severity":1,"message":"97","line":50,"column":25,"nodeType":"98","endLine":50,"endColumn":55},{"ruleId":"84","replacedBy":"99"},{"ruleId":"86","replacedBy":"100"},{"ruleId":"92","severity":1,"message":"93","line":17,"column":43,"nodeType":"94","messageId":"95","endLine":17,"endColumn":45},{"ruleId":"92","severity":1,"message":"93","line":19,"column":50,"nodeType":"94","messageId":"95","endLine":19,"endColumn":52},{"ruleId":"92","severity":1,"message":"93","line":21,"column":50,"nodeType":"94","messageId":"95","endLine":21,"endColumn":52},{"ruleId":"92","severity":1,"message":"93","line":23,"column":50,"nodeType":"94","messageId":"95","endLine":23,"endColumn":52},{"ruleId":"96","severity":1,"message":"97","line":50,"column":25,"nodeType":"98","endLine":50,"endColumn":55},{"ruleId":"92","severity":1,"message":"93","line":17,"column":43,"nodeType":"94","messageId":"95","endLine":17,"endColumn":45},{"ruleId":"92","severity":1,"message":"93","line":19,"column":50,"nodeType":"94","messageId":"95","endLine":19,"endColumn":52},{"ruleId":"92","severity":1,"message":"93","line":21,"column":50,"nodeType":"94","messageId":"95","endLine":21,"endColumn":52},{"ruleId":"92","severity":1,"message":"93","line":23,"column":50,"nodeType":"94","messageId":"95","endLine":23,"endColumn":52},{"ruleId":"96","severity":1,"message":"97","line":55,"column":25,"nodeType":"98","endLine":55,"endColumn":55},{"ruleId":"96","severity":1,"message":"97","line":30,"column":25,"nodeType":"98","endLine":30,"endColumn":55},{"ruleId":"101","severity":1,"message":"102","line":8,"column":5,"nodeType":"103","messageId":"104","endLine":10,"endColumn":29},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'holder' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["105"],["106"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]