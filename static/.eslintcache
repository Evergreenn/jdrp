[{"/home/guillaume/Projects/test/jdrp/static/src/index.js":"1","/home/guillaume/Projects/test/jdrp/static/src/App.js":"2","/home/guillaume/Projects/test/jdrp/static/src/component/nav.jsx":"3","/home/guillaume/Projects/test/jdrp/static/src/pages/home.jsx":"4","/home/guillaume/Projects/test/jdrp/static/src/pages/about.jsx":"5","/home/guillaume/Projects/test/jdrp/static/src/component/item.jsx":"6","/home/guillaume/Projects/test/jdrp/static/src/component/items/armor.jsx":"7","/home/guillaume/Projects/test/jdrp/static/src/component/items/weapon.jsx":"8","/home/guillaume/Projects/test/jdrp/static/src/component/items/jewel.jsx":"9","/home/guillaume/Projects/test/jdrp/static/src/component/items/consumable.jsx":"10","/home/guillaume/Projects/test/jdrp/static/src/pages/private/appjdrp.jsx":"11","/home/guillaume/Projects/test/jdrp/static/src/keycloak.jsx":"12","/home/guillaume/Projects/test/jdrp/static/src/utilities/privatesRoutes.jsx":"13"},{"size":533,"mtime":1608115435689,"results":"14","hashOfConfig":"15"},{"size":881,"mtime":1608126134884,"results":"16","hashOfConfig":"15"},{"size":1675,"mtime":1608132886720,"results":"17","hashOfConfig":"15"},{"size":2050,"mtime":1608133822320,"results":"18","hashOfConfig":"15"},{"size":160,"mtime":1608038212431,"results":"19","hashOfConfig":"15"},{"size":1471,"mtime":1608039620675,"results":"20","hashOfConfig":"15"},{"size":2508,"mtime":1608038887629,"results":"21","hashOfConfig":"15"},{"size":2565,"mtime":1608038942816,"results":"22","hashOfConfig":"15"},{"size":2942,"mtime":1608038944782,"results":"23","hashOfConfig":"15"},{"size":1478,"mtime":1608038946815,"results":"24","hashOfConfig":"15"},{"size":282,"mtime":1608131380913,"results":"25","hashOfConfig":"15"},{"size":449,"mtime":1608122145735,"results":"26","hashOfConfig":"15"},{"size":597,"mtime":1608130571917,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"lf34g",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/guillaume/Projects/test/jdrp/static/src/index.js",[],["59","60"],"/home/guillaume/Projects/test/jdrp/static/src/App.js",[],"/home/guillaume/Projects/test/jdrp/static/src/component/nav.jsx",[],"/home/guillaume/Projects/test/jdrp/static/src/pages/home.jsx",["61"],"/home/guillaume/Projects/test/jdrp/static/src/pages/about.jsx",[],"/home/guillaume/Projects/test/jdrp/static/src/component/item.jsx",[],"/home/guillaume/Projects/test/jdrp/static/src/component/items/armor.jsx",["62","63","64","65","66"],"import React from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Card from 'react-bootstrap/Card';\n\nclass Armor extends React.Component {\n    render() {\n        let itemspec;\n        let border;\n\n        if (this.props.item.object.equipement.armor.ailment !== 'None') {\n            itemspec = <Card.Subtitle className=\"mb-2 text-muted\"><b>Resistance:</b> {this.props.item.object.equipement.armor.ailment}: {this.props.item.object.equipement.armor.resistances}%</Card.Subtitle>\n        } else {\n            itemspec = ''\n        }\n\n        if (this.props.item.object.rarity == \"common\") {\n            border = \"item_render_div_common\"\n        } else if (this.props.item.object.rarity == \"magic\") {\n            border = \"item_render_div_magic\"\n        } else if (this.props.item.object.rarity == \"rare\") {\n            border = \"item_render_div_rare\"\n        } else if (this.props.item.object.rarity == \"epic\") {\n            border = \"item_render_div_epic\"\n        } else {\n            border = \"item_render_div_legendary\"\n        }\n\n        const popover = (\n            <Popover id=\"popover-basic\">\n                <Card style={{ width: '18rem', color:\"black\"}}>\n                    <Card.Body>\n                        <Card.Title>{this.props.item.object.name}</Card.Title>\n                        <hr/>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Type:</b> {this.props.item.object.item_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Rarity:</b> {this.props.item.object.rarity}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Emplacement:</b> {this.props.item.object.equipement.armor.armor_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Armure:</b> {this.props.item.object.equipement.armor.armor}</Card.Subtitle>\n                        {itemspec}\n                    </Card.Body>\n                </Card>\n            </Popover>\n        );\n\n        const asset = 'http://localhost:8000/' + this.props.item.object.asset;\n        return (\n            <div class={border}>\n                <div class=\"item_render_div\">\n                    <OverlayTrigger trigger=\"hover\" placement=\"auto\" overlay={popover}>\n                        <img width=\"50\" src={asset} />\n                    </OverlayTrigger>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Armor","/home/guillaume/Projects/test/jdrp/static/src/component/items/weapon.jsx",["67","68","69","70","71"],"import React from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Card from 'react-bootstrap/Card';\n\nclass Weapon extends React.Component {\n    render() {\n        let itemspec;\n        let border;\n\n        if (this.props.item.object.equipement.weapon.ailment[0] !== 'None') {\n            itemspec = <Card.Subtitle className=\"mb-2 text-muted\"><b>Effets:</b> {this.props.item.object.equipement.weapon.ailment[0]}: {this.props.item.object.equipement.weapon.ailment[1]}%</Card.Subtitle>\n        } else {\n            itemspec = ''\n        }\n\n        if (this.props.item.object.rarity == \"common\") {\n            border = \"item_render_div_common\"\n        } else if (this.props.item.object.rarity == \"magic\") {\n            border = \"item_render_div_magic\"\n        } else if (this.props.item.object.rarity == \"rare\") {\n            border = \"item_render_div_rare\"\n        } else if (this.props.item.object.rarity == \"epic\") {\n            border = \"item_render_div_epic\"\n        } else {\n            border = \"item_render_div_legendary\"\n        }\n\n        const popover = (\n            <Popover id=\"popover-basic\">\n                <Card style={{ width: '18rem', color:\"black\"}}>\n                    <Card.Body>\n                        <Card.Title>{this.props.item.object.name}</Card.Title>\n                        <hr/>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Type:</b> {this.props.item.object.item_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Rarity:</b> {this.props.item.object.rarity}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Emplacement:</b> {this.props.item.object.equipement.slot}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Damages:</b> {this.props.item.object.equipement.weapon.min_damage} - {this.props.item.object.equipement.weapon.max_damage}</Card.Subtitle>\n                        {itemspec}\n                    </Card.Body>\n                </Card>\n            </Popover>\n        );\n\n        const asset = 'http://localhost:8000/' + this.props.item.object.asset;\n        return (\n            <div class={border}>\n                <div class=\"item_render_div\">\n                    <OverlayTrigger trigger=\"hover\" placement=\"auto\" overlay={popover}>\n                        <img width=\"50\" src={asset} />\n                    </OverlayTrigger>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Weapon","/home/guillaume/Projects/test/jdrp/static/src/component/items/jewel.jsx",["72","73","74","75","76"],"import React from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Card from 'react-bootstrap/Card';\n\nclass Jewel extends React.Component {\n    render() {\n        let itemspec;\n        let border;\n\n        if (this.props.item.object.equipement.jewel.spell.incante !== \"\") {\n            itemspec = <Card.Subtitle className=\"mb-2 text-muted\"><b>Spell damage:</b> {this.props.item.object.equipement.jewel.spell.incante}</Card.Subtitle>\n        } else {\n            itemspec = ''\n        }\n\n        if (this.props.item.object.rarity == \"common\") {\n            border = \"item_render_div_common\"\n        } else if (this.props.item.object.rarity == \"magic\") {\n            border = \"item_render_div_magic\"\n        } else if (this.props.item.object.rarity == \"rare\") {\n            border = \"item_render_div_rare\"\n        } else if (this.props.item.object.rarity == \"epic\") {\n            border = \"item_render_div_epic\"\n        } else {\n            border = \"item_render_div_legendary\"\n        }\n\n        const popover = (\n            <Popover id=\"popover-basic\">\n                <Card style={{ width: '18rem', color:\"black\"}}>\n                    <Card.Body>\n                        <Card.Title>{this.props.item.object.name}</Card.Title>\n                        <hr></hr>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Type:</b> {this.props.item.object.equipement.jewel.jewel_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Rarity:</b> {this.props.item.object.rarity}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Emplacement:</b> {this.props.item.object.equipement.slot}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Spell name:</b> {this.props.item.object.equipement.jewel.spell.name}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Incante:</b> {this.props.item.object.equipement.jewel.spell.incante}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Usage:</b> {this.props.item.object.equipement.jewel.usage}</Card.Subtitle>\n                        {itemspec}\n                        <Card.Text>\n                            {this.props.item.object.equipement.jewel.spell.description}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Popover>\n        );\n\n        const asset = 'http://localhost:8000/' + this.props.item.object.asset;\n        return (\n            <div class={border}>\n                <div class=\"item_render_div\">\n                    <OverlayTrigger trigger=\"hover\" placement=\"auto\" overlay={popover}>\n                        <img width=\"50\" src={asset} />\n                    </OverlayTrigger>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Jewel","/home/guillaume/Projects/test/jdrp/static/src/component/items/consumable.jsx",["77"],"import React from 'react';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Card from 'react-bootstrap/Card';\n\nclass Consumable extends React.Component {\n    render() {\n\n        const popover = (\n            <Popover id=\"popover-basic\">\n                <Card style={{ width: '18rem', color:\"black\"}}>\n                    <Card.Body>\n                        <Card.Title>{this.props.item.consumable.name}</Card.Title>\n                        <hr/>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Type:</b> {this.props.item.consumable.item_type}</Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Rarity:</b> {this.props.item.consumable.rarity}</Card.Subtitle>\n                        <Card.Text>\n                            {this.props.item.consumable.description}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Popover>\n        );\n\n        const asset = 'http://localhost:8000/' + this.props.item.consumable.asset;\n        return (\n            <div class=\"item_render_div_common\">\n                <div class=\"item_render_div\">\n                    <OverlayTrigger trigger=\"hover\" placement=\"auto\" overlay={popover}>\n                        <img width=\"50\" src={asset} />\n                    </OverlayTrigger>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Consumable","/home/guillaume/Projects/test/jdrp/static/src/pages/private/appjdrp.jsx",["78"],"/home/guillaume/Projects/test/jdrp/static/src/keycloak.jsx",[],"/home/guillaume/Projects/test/jdrp/static/src/utilities/privatesRoutes.jsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":17,"column":43,"nodeType":"89","messageId":"90","endLine":17,"endColumn":45},{"ruleId":"87","severity":1,"message":"88","line":19,"column":50,"nodeType":"89","messageId":"90","endLine":19,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":21,"column":50,"nodeType":"89","messageId":"90","endLine":21,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":23,"column":50,"nodeType":"89","messageId":"90","endLine":23,"endColumn":52},{"ruleId":"91","severity":1,"message":"92","line":50,"column":25,"nodeType":"93","endLine":50,"endColumn":55},{"ruleId":"87","severity":1,"message":"88","line":17,"column":43,"nodeType":"89","messageId":"90","endLine":17,"endColumn":45},{"ruleId":"87","severity":1,"message":"88","line":19,"column":50,"nodeType":"89","messageId":"90","endLine":19,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":21,"column":50,"nodeType":"89","messageId":"90","endLine":21,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":23,"column":50,"nodeType":"89","messageId":"90","endLine":23,"endColumn":52},{"ruleId":"91","severity":1,"message":"92","line":50,"column":25,"nodeType":"93","endLine":50,"endColumn":55},{"ruleId":"87","severity":1,"message":"88","line":17,"column":43,"nodeType":"89","messageId":"90","endLine":17,"endColumn":45},{"ruleId":"87","severity":1,"message":"88","line":19,"column":50,"nodeType":"89","messageId":"90","endLine":19,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":21,"column":50,"nodeType":"89","messageId":"90","endLine":21,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":23,"column":50,"nodeType":"89","messageId":"90","endLine":23,"endColumn":52},{"ruleId":"91","severity":1,"message":"92","line":55,"column":25,"nodeType":"93","endLine":55,"endColumn":55},{"ruleId":"91","severity":1,"message":"92","line":30,"column":25,"nodeType":"93","endLine":30,"endColumn":55},{"ruleId":"94","severity":1,"message":"95","line":8,"column":5,"nodeType":"96","messageId":"97","endLine":10,"endColumn":29},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'holder' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]